name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  POETRY_VERSION: "2.1.3"


jobs:
  style:
    name: code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        shell: bash
        run: pipx install poetry==$POETRY_VERSION

      - name: Install dependencies
        shell: bash
        run: poetry install --with dev

      - name: Black format
        shell: bash
        run: poetry run black --check .

      - name: Ruff lint
        shell: bash
        run: poetry run ruff check --output-format=github .

  test:
    name: UTs ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.12]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        shell: bash
        run: pipx install poetry==$POETRY_VERSION

      - name: Install dependencies
        shell: bash
        run: poetry install --with test

      - name: Run UTs
        shell: bash
        run: poetry run pytest -o log_cli=0 unit-tests

  build:
    needs: [style, test]
    name: PyInstaller
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.12]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        shell: bash
        run: pipx install poetry==$POETRY_VERSION

      - name: Install dependencies
        shell: bash
        run: poetry install --with build

      - name: Build .exe
        shell: bash
        run: poetry run pyinstaller main.spec

      - name: Run .exe
        shell: bash
        run: dist/main -m smoke --session-logs=0
