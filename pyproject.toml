[tool.poetry]
name = "pytest-demo"
version = "0.1.0"
description = "Example pytest application to test external hardware or software"
authors = ["Some Author <some.author@example.com>"]
readme = "README.md"
license = "LICENSE"
packages = [
    {include = "toolkit"}
]

[tool.poetry.dependencies]
python = ">=3.12,<3.14"
pytest = "^8"
pytest-runner = "*"
pytest-html = "^4.1.1"
pytest-metadata = "^3.1.1"
pytest-tagging = "^1.6.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "24.10.0"
ruff = "0.7.4"
pre-commit = "*"

[tool.poetry.group.build]
optional = true

[tool.poetry.group.build.dependencies]
pyinstaller = "^6.12.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest-timeout = "*"
pytest-randomly = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
required-version = 24

[tool.isort]
profile = "black"

[tool.ruff.lint]
select = [
    "B",        # flake8-bugbear,
    "C9",       # mccabe
    "C4",       # flake8-comprehensions
    "E", "W",   # pycodestyle
    "F",        # pyflakes
    "I",        # isort
    "ISC",      # flake8-implicit-str-concat
    "N",        # pep8-naming
    "PL",       # pylint
    "RUF",      # Ruff specific rules
]
# Never enforce `E501` (line length violations)
ignore = ["E501"]
